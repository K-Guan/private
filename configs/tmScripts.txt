{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"Stack Exchange CV Request Generator","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"excludes":false,"includes":false,"matches":false,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["/^https?:\\/\\/\\w*.?(stackexchange.com|stackoverflow.com|serverfault.com|superuser.com|askubuntu.com|stackapps.com|mathoverflow.net)\\/q(uestions)?\\/\\d+/"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"user_agent":""},"storage":{"data":{},"ts":1448203128163},"enabled":true,"position":1,"file_url":"https://rawgit.com/SO-Close-Vote-Reviewers/UserScripts/master/SECloseVoteRequestGenerator.user.js","uuid":"92eb7581-a2c9-462d-af44-7eb8c903f8cb","source":""},{"name":"@Closey command auto complete","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"excludes":false,"includes":false,"matches":false,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://chat.stackoverflow.com/rooms/41570/so-close-vote-reviewers"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"user_agent":""},"storage":{"data":{},"ts":1448203128177},"enabled":true,"position":2,"file_url":"https://raw.githubusercontent.com/SO-Close-Vote-Reviewers/UserScripts/master/BotCommands.user.js","uuid":"d24b6bbf-6f55-48c7-b77a-c1556d50ac28","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBAQ2xvc2V5IGNvbW1hbmQgYXV0byBjb21wbGV0ZQovLyBAbmFtZXNwYWNlICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9TTy1DbG9zZS1Wb3RlLVJldmlld2Vycy9Vc2VyU2NyaXB0cwovLyBAdmVyc2lvbiAgICAgIDAuMgovLyBAZGVzY3JpcHRpb24gIGNvbW1hbmQgY29tcGxldGlvbiBmb3IgYm90IGNvbW1hbmRzCi8vIEBhdXRob3IgICAgICAgcmVuZQovLyBAbWF0Y2ggICAgICAgICo6Ly9jaGF0LnN0YWNrb3ZlcmZsb3cuY29tL3Jvb21zLzQxNTcwL3NvLWNsb3NlLXZvdGUtcmV2aWV3ZXJzCi8vIEBncmFudCAgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KCi8qZ2xvYmFsICQ6ZmFsc2UsIGRvY3VtZW50OmZhbHNlLCBjb25zb2xlOmZhbHNlICovCmZ1bmN0aW9uIHN0YXJ0QXV0b0NvbXBsZXRlKGpxdWVyeSkgewogICJ1c2Ugc3RyaWN0IjsKICAgIGlmICghU3RyaW5nLnByb3RvdHlwZS5zdGFydHNXaXRoKSB7CiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFN0cmluZy5wcm90b3R5cGUsICdzdGFydHNXaXRoJywgewogICAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSwKICAgICAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSwKICAgICAgICAgICAgd3JpdGFibGU6IGZhbHNlLCAgIAogICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gKHNlYXJjaFN0cmluZywgcG9zaXRpb24pIHsKICAgICAgICAgICAgICAgIHBvc2l0aW9uID0gcG9zaXRpb24gfHwgMDsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmxhc3RJbmRleE9mKHNlYXJjaFN0cmluZywgcG9zaXRpb24pID09PSBwb3NpdGlvbjsKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfQoKICAgIHZhciAkID0ganF1ZXJ5LAogICAgICAgIGlucCA9ICQoJyNpbnB1dCcpLCAgLy8gd2hlcmUgd2UgdHlwZSBtZXNzYWdlcwogICAgICAgIHBhcnNlID0gLyhAY2xvc2V5XHMrKShbXHd8XFddKykvaSwgLy8gLy9wYXJzZSBib3RuYW1lIGFuZCBjb21tYW5kcwogICAgICAgIGNtZHMgPSBbCiAgICAgICAgICAgICAvLyBwdWJsaWMKICAgICAgICAgICAgJ2FsaXZlJywKICAgICAgICAgICAgJ2NvbW1hbmRzJywKICAgICAgICAgICAgJ2hlbHAnLAogICAgICAgICAgICAncnVubmluZyBjb21tYW5kcycsCiAgICAgICAgICAgICdzdGF0dXMnLAogICAgICAgICAgICAgLy8gUmVnaXN0ZXJlZAogICAgICAgICAgICAnYXVkaXQgc3RhdHMnLCAvLyAtIFNob3dzIHN0YXRzIGFib3V0IHlvdXIgcmVjb3JkZWQgYXVkaXRzLgogICAgICAgICAgICAnY29tcGxldGVkIHRhZ3MnLCAvLyBbbWluIDwjPl0gLSBTaG93cyB0aGUgbGF0ZXN0IHRhZ3MgdGhhdCBoYXZlIGJlZW4gY29tcGxldGVkIGJ5IG11bHRpcGxlIHBlb3BsZS4KICAgICAgICAgICAgJ2N1cnJlbnQgc2Vzc2lvbicsIC8vIC0gVGVsbHMgaWYgdGhlIHVzZXIgaGFzIGFuIG9wZW4gc2Vzc2lvbiBvciBub3QsIGFuZCB3aGVuIGl0IHN0YXJ0ZWQuCiAgICAgICAgICAgICdjdXJyZW50IHRhZycsIC8vIC0gR2V0IHRoZSB0YWcgdGhhdCBoYXMgdGhlIG1vc3QgYW1vdW50IG9mIG1hbmFnZWFibGUgY2xvc2UgcXVldWUgaXRlbXMgZnJvbSB0aGUgU0VERSBxdWVyeS4KICAgICAgICAgICAgJ2VuZCBzZXNzaW9uJywgLy8gLSBJZiBhIHVzZXIgaGFzIGFuIG9wZW4gcmV2aWV3IHNlc3Npb24gdGhpcyBjb21tYW5kIHdpbGwgZm9yY2UgZW5kIHRoYXQgc2Vzc2lvbi4KICAgICAgICAgICAgJ2xhc3Qgc2Vzc2lvbiBzdGF0cycsIC8vIC0gU2hvd3Mgc3RhdHMgYWJvdXQgeW91ciBsYXN0IHJldmlldyBzZXNzaW9uLgogICAgICAgICAgICAnbGFzdCBzZXNzaW9uIGVkaXQgY291bnQnLCAvLyA8bmV3IGNvdW50PiAtIEVkaXRzIHRoZSBudW1iZXIgb2YgcmV2aWV3ZWQgaXRlbXMgaW4geW91ciBsYXN0IHJldmlldyBzZXNzaW9uLgogICAgICAgICAgICAnbmV4dCcsIC8vIDwjPiB0YWdzIC0gRGlzcGxheXMgdGhlIGZpcnN0IFggdGFncyBmcm9tIHRoZSBTRURFIHF1ZXJ5IHRvIGZvY3VzIG9uLgogICAgICAgICAgICAncmVmcmVzaCB0YWdzJywgLy8gLSBGb3JjZXMgYSByZWZyZXNoIG9mIHRoZSB0YWdzIG9idGFpbmVkIGZyb20gdGhlIFNFREUgcXVlcnkuCiAgICAgICAgICAgICdzdGFydCBldmVudCcsIC8vIC0gU2hvd3MgdGhlIGN1cnJlbnQgc3RhdHMgZnJvbSB0aGUgL3Jldmlldy9jbG9zZS9zdGF0cyBwYWdlIGFuZCB0aGUgbmV4dCAzIHRhZ3MgdG8gd29yayBvbi4KICAgICAgICAgICAgJ3N0YXJ0aW5nJywgLy8gLSBJbmZvcm1zIHRoZSBjaGF0Ym90IHRoYXQgeW91IGFyZSBzdGFydGluZyBhIG5ldyByZXZpZXcgc2Vzc2lvbi4KICAgICAgICAgICAgJ3N0YXRzJywgLy8gLSBTaG93cyB0aGUgc3RhdHMgYXQgdGhlIHRvcCBvZiB0aGUgL3Jldmlldy9jbG9zZS9zdGF0cyBwYWdlLgogICAgICAgICAgICAvLyBvd25lcgogICAgICAgICAgICAnYWRkIHVzZXInLAogICAgICAgICAgICAndHJhY2sgdXNlcicsIC8vIDxjaGF0IGlkPiAtIEFkZHMgdGhlIHVzZXIgdG8gdGhlIHJlZ2lzdGVyZWQgdXNlcnMgbGlzdC4KICAgICAgICAgICAgJ3N0b3AgYm90Jy8vIC0gVGhlIGJvdCB3aWxsIGxlYXZlIHRoZSBjaGF0IHJvb20gYW5kIHF1aXQgdGhlIHJ1bm5pbmcgYXBwbGljYXRpb24uCiAgICAgICAgXTsgLy8gYWxsIGtub3duIGNvbW1hbmRzCgogICAgLy8gY2xlYXIgYWxsIGhpbnRzIGFuZCByZW1vdmUgY2xpY2sgaGFuZGxlcnMKICAgIGZ1bmN0aW9uIGNsZWFySGludHMoKSB7CiAgICAgICAgJCgnI2Nsb3NleScpLmZpbmQoJ2xpJykuZWFjaChmdW5jdGlvbiAoKSB7ICQodGhpcykub2ZmKCdjbGljaycpOyB9KTsKICAgICAgICAkKCcjY2xvc2V5JykucmVtb3ZlKCk7CiAgICB9CgogICAgLy8gcHV0IHRoZSBjaG9vc2UgaGludCBpbiB0aGUgY2hhdCBtZXNzYWdlIHRleHQgYXJlYQogICAgZnVuY3Rpb24gY29tcGxldGUoYm90LCBjb21tYW5kKSB7CiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgaW5wLnZhbChib3QgKyBjb21tYW5kKTsKICAgICAgICAgICAgY2xlYXJIaW50cygpOwogICAgICAgIH07CiAgICB9CgogICAgLy8gYnVpbGQgb24gc2luZ2xlIGxlIHRoYXQgaG9sZHMgdGhlIGhpbnQKICAgIGZ1bmN0aW9uIGJ1aWxkSGludCh2YWx1ZSwgYm90KSB7CiAgICAgICAgdmFyIGxpID0gJCgnPGxpPjwvbGk+JykKICAgICAgICAgICAgLmNzcygnZGlzcGxheScsICdpbmxpbmUtYmxvY2snKQogICAgICAgICAgICAuY3NzKCdtYXJnaW4tbGVmdCcsICczcHgnKQogICAgICAgICAgICAuY3NzKCdtYXJnaW4tcmlnaHQnLCAnM3B4JykKICAgICAgICAgICAgLmNzcygncGFkZGluZycsICcycHgnKQogICAgICAgICAgICAuY3NzKCdib3JkZXInLCAnc29saWQgMXB4IGJsdWUnKQogICAgICAgICAgICAudGV4dCh2YWx1ZSk7CiAgICAgICAgbGkub24oJ2NsaWNrJywgY29tcGxldGUoYm90LCB2YWx1ZSkpOwogICAgICAgIHJldHVybiBsaTsKICAgIH0KCiAgICBmdW5jdGlvbiBoaWdobGlnaHQobGkpIHsKICAgICAgICBsaS5hZGRDbGFzcygndGFiJyk7CiAgICAgICAgbGkuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgJ3llbGxvdycpOwogICAgICAgIHJldHVybiBsaS50ZXh0KCk7CiAgICB9CiAgICBmdW5jdGlvbiBoaWdobGlnaHROZXh0SGludCgpIHsKICAgICAgICB2YXIgc2V0bmV4dCA9IGZhbHNlLAogICAgICAgICAgICBsaWYsCiAgICAgICAgICAgIHNlbGVjdGVkOwogICAgICAgICQoJyNjbG9zZXknKS5maW5kKCdsaScpLmVhY2goZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgbGkgPSAkKHRoaXMpOwogICAgICAgICAgICBpZiAobGkuaGFzQ2xhc3MoJ3RhYicpKSB7CiAgICAgICAgICAgICAgICBzZXRuZXh0ID0gdHJ1ZTsKICAgICAgICAgICAgICAgIGxpLnJlbW92ZUNsYXNzKCd0YWInKTsKICAgICAgICAgICAgICAgIGxpLmNzcygnYmFja2dyb3VuZC1jb2xvcicsICd3aGl0ZScpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaWYgKHNldG5leHQpIHsKICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZCA9IGhpZ2hsaWdodChsaSk7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgaWYgKCFzZXRuZXh0KSB7CiAgICAgICAgICAgIGxpZiA9ICQoJyNjbG9zZXknKS5maW5kKCdsaScpOwogICAgICAgICAgICBpZiAobGlmLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgIHNlbGVjdGVkID0gaGlnaGxpZ2h0KCQobGlmWzBdKSk7CiAgICAgICAgICAgICAgICBzZXRuZXh0ID0gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gc2VsZWN0ZWQ7CiAgICB9CgogICAgZnVuY3Rpb24gaGFuZGxlS2V5KGNtZCwgYm90KSB7CiAgICAgICAgdmFyIGJvdGNtZCwKICAgICAgICAgICAgYywKICAgICAgICAgICAgY29udGFpbmVyOwoKICAgICAgICBjbGVhckhpbnRzKCk7CiAgICAgICAgY29udGFpbmVyID0gJCgnPHVsIGlkPSJjbG9zZXkiPjwvdWw+JykuY3NzKCd0ZXh0LWFsaWduJywgJ2xlZnQnKTsKICAgICAgICBmb3IgKGMgPSAwOyBjIDwgY21kcy5sZW5ndGg7IGMgPSBjICsgMSkgewogICAgICAgICAgICBib3RjbWQgPSBjbWRzW2NdOwogICAgICAgICAgICBpZiAoYm90Y21kLnN0YXJ0c1dpdGgoY21kKSAmJiBib3RjbWQgIT09IGNtZCkgewogICAgICAgICAgICAgICAgY29udGFpbmVyLmFwcGVuZChidWlsZEhpbnQoYm90Y21kLCBib3QpKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAkKCcjdGFiY29tcGxldGUtY29udGFpbmVyJykuYXBwZW5kKGNvbnRhaW5lcik7CiAgICB9CgogICAgJChkb2N1bWVudCkub24oJ2tleWRvd24nLCBmdW5jdGlvbiAoaykgewogICAgICAgIHZhciBCT1QgPSAxLAogICAgICAgICAgICBDT01NQU5EID0gMiwKICAgICAgICAgICAgcmVzdWx0ID0gcGFyc2UuZXhlYyhpbnAudmFsKCkpLAogICAgICAgICAgICBzZWxlY3RlZDsKCiAgICAgICAgaWYgKHJlc3VsdCAhPT0gbnVsbCAmJgogICAgICAgICAgICAgICAgcmVzdWx0Lmxlbmd0aCA+IENPTU1BTkQgJiYKICAgICAgICAgICAgICAgIGsua2V5Q29kZSA9PT0gOSkgewogICAgICAgICAgICBzZWxlY3RlZCA9IGhpZ2hsaWdodE5leHRIaW50KCk7CiAgICAgICAgICAgIGlmIChzZWxlY3RlZCAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgICAgICBrLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgICBrLnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAgICAgICAgICAgaW5wLnZhbChyZXN1bHRbQk9UXSArIHNlbGVjdGVkKTsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSk7CgogICAgaW5wLm9uKCdrZXl1cCcsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgdmFyIEJPVCA9IDEsCiAgICAgICAgICAgIENPTU1BTkQgPSAyLAogICAgICAgICAgICByZXN1bHQgPSBwYXJzZS5leGVjKGUucmVzdWx0KTsKICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpOwogICAgICAgIGlmIChlLmtleUNvZGUgIT09IDkpIHsKICAgICAgICAgICAgaWYgKHJlc3VsdCAhPT0gbnVsbCAmJgogICAgICAgICAgICAgICAgICAgIHJlc3VsdC5sZW5ndGggPiBDT01NQU5EKSB7CiAgICAgICAgICAgICAgICBoYW5kbGVLZXkocmVzdWx0W0NPTU1BTkRdLCByZXN1bHRbQk9UXSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjbGVhckhpbnRzKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9KTsKfQoKZnVuY3Rpb24gZ2V0SnF1ZXJ5KCkgewogICJ1c2Ugc3RyaWN0IjsKICAgIHJldHVybiAkIHx8IHVuc2FmZVdpbmRvdy5qUXVlcnk7Cn0KCndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywKICAgIGZ1bmN0aW9uKCkgewogICAgICAgIHN0YXJ0QXV0b0NvbXBsZXRlKGdldEpxdWVyeSgpKTsKICAgIH0pOwo="},{"name":"stackoverflow-comment-reply","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"excludes":false,"includes":false,"matches":false,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://stackoverflow.com/*","*://serverfault.com/*","*://superuser.com/*","*://meta.stackoverflow.com/*","*://meta.serverfault.com/*","*://meta.superuser.com/*","*://stackapps.com/*","*://*.stackexchange.com/*","*://askubuntu.com/*","*://meta.askubuntu.com/*","*://answers.onstartups.com/*","*://meta.answers.onstartups.com/*","*://mathoverflow.net/*","*://area51.stackexchange.com/proposals/*"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"user_agent":""},"storage":{"data":{},"ts":1448203128208},"enabled":true,"position":3,"file_url":"https://bitbucket.org/balpha/user-scripts/raw/tip/comment-reply-links/comment-reply-links.user.js","uuid":"b30320e8-9e48-4191-9a0a-15f6c81e1d21","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIHN0YWNrb3ZlcmZsb3ctY29tbWVudC1yZXBseQovLyBAbmFtZXNwYWNlICAgICAgc3RhY2tvdmVyZmxvdwovLyBAZGVzY3JpcHRpb24gICAgQWRkICJyZXBseSIgbGlua3MgdG8gY29tbWVudHMKLy8gQHZlcnNpb24gICAgICAgIDEuMQovLyBAbWF0Y2ggICAgICAgICAgKjovL3N0YWNrb3ZlcmZsb3cuY29tLyoKLy8gQG1hdGNoICAgICAgICAgICo6Ly9zZXJ2ZXJmYXVsdC5jb20vKgovLyBAbWF0Y2ggICAgICAgICAgKjovL3N1cGVydXNlci5jb20vKgovLyBAbWF0Y2ggICAgICAgICAgKjovL21ldGEuc3RhY2tvdmVyZmxvdy5jb20vKgovLyBAbWF0Y2ggICAgICAgICAgKjovL21ldGEuc2VydmVyZmF1bHQuY29tLyoKLy8gQG1hdGNoICAgICAgICAgICo6Ly9tZXRhLnN1cGVydXNlci5jb20vKgovLyBAbWF0Y2ggICAgICAgICAgKjovL3N0YWNrYXBwcy5jb20vKgovLyBAbWF0Y2ggICAgICAgICAgKjovLyouc3RhY2tleGNoYW5nZS5jb20vKgovLyBAbWF0Y2ggICAgICAgICAgKjovL2Fza3VidW50dS5jb20vKgovLyBAbWF0Y2ggICAgICAgICAgKjovL21ldGEuYXNrdWJ1bnR1LmNvbS8qCi8vIEBtYXRjaCAgICAgICAgICAqOi8vYW5zd2Vycy5vbnN0YXJ0dXBzLmNvbS8qCi8vIEBtYXRjaCAgICAgICAgICAqOi8vbWV0YS5hbnN3ZXJzLm9uc3RhcnR1cHMuY29tLyoKLy8gQG1hdGNoICAgICAgICAgICo6Ly9tYXRob3ZlcmZsb3cubmV0LyoKLy8gQG1hdGNoICAgICAgICAgICo6Ly9hcmVhNTEuc3RhY2tleGNoYW5nZS5jb20vcHJvcG9zYWxzLyoKLy8gQGF1dGhvciAgICAgICAgIEJlbmphbWluIER1bWtlLXZvbiBkZXIgRWhlCi8vID09L1VzZXJTY3JpcHQ9PQoKLy8gVGhhbmtzIHRvIFNob2c5IGZvciB0aGlzIGlkZWEgZm9yIG1ha2luZyB0aGUgc2NyaXB0IHdvcmsgaW4gYm90aAovLyBDaHJvbWUgYW5kIEZpcmVmb3g6Ci8vIGh0dHA6Ly9tZXRhLnN0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy80NjU2MgpmdW5jdGlvbiB3aXRoX2pxdWVyeShmKSB7CiAgICB2YXIgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7CiAgICBzY3JpcHQudHlwZSA9ICJ0ZXh0L2phdmFzY3JpcHQiOwogICAgc2NyaXB0LnRleHRDb250ZW50ID0gIigiICsgZi50b1N0cmluZygpICsgIikoalF1ZXJ5KSI7CiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNjcmlwdCk7Cn07Cgp3aXRoX2pxdWVyeShmdW5jdGlvbigkKSB7CiAgICAgICAgCiAgICAkKGRvY3VtZW50KS5hamF4Q29tcGxldGUoZnVuY3Rpb24oKXsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgJCgiLmNvbW1lbnRzIikuZWFjaChwdXRfcmVwbHlfbGlua3MpOwogICAgICAgIH0sIDEwMCk7CiAgICB9KTsKICAgICAgICAKICAgIC8vIGV2ZW50IGhhbmRsZXIgZm9yIGEgY2xpY2sgb24gdGhlIHJlcGx5IGxpbmtzCiAgICBmdW5jdGlvbiByZXBseSgpIHsKICAgICAgICB2YXIgY29tbWVudGxpbmsgPSAkKHRoaXMpLmNsb3Nlc3QoIi5jb21tZW50cyIpLm5leHQoKS5jbGljaygpOwogICAgICAgIHZhciBjb21tZW50bGlua0lkID0gY29tbWVudGxpbmsuYXR0cigiaWQiKTsKICAgICAgICB2YXIgdXNlcm5hbWUgPSBnb29kaWZ5KCQodGhpcykucHJldigpLnRleHQoKS5yZXBsYWNlKC/imaYvLCAiIikpCiAgICAgICAgdmFyIGZvcm1pZCA9IGNvbW1lbnRsaW5rSWQucmVwbGFjZSgvXi4qLShcZCspJC8sICJhZGQtY29tbWVudC0kMSIpOwogICAgICAgIHZhciB0YSA9ICQoIiMiICsgZm9ybWlkICsgIiB0ZXh0YXJlYSIpWzBdOwogICAgICAgIHZhciBzdGFydCA9IHRhLnNlbGVjdGlvblN0YXJ0OwogICAgICAgIHZhciBlbmQgPSB0YS5zZWxlY3Rpb25FbmQ7CiAgICAgICAgdmFyIHNoaWZ0ID0gdXNlcm5hbWUubGVuZ3RoICsgMzsKICAgICAgICB0YS52YWx1ZSA9ICJAIiArIHVzZXJuYW1lICsgIjogIiArIHRhLnZhbHVlOwogICAgICAgIHRhLmZvY3VzKCk7CiAgICAgICAgdGEuc2VsZWN0aW9uU3RhcnQgPSBzdGFydCArIHNoaWZ0OwogICAgICAgIHRhLnNlbGVjdGlvbkVuZCA9IGVuZCArIHNoaWZ0OwogICAgfTsKCiAgICBmdW5jdGlvbiBwdXRfcmVwbHlfbGlua3MoKSB7CiAgICAgICAgJCh0aGlzKS5maW5kKCIuY29tbWVudDpub3QoOmhhcygucmVwbHktbGluaykpIC5jb21tZW50LXVzZXIiKS5lYWNoKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgJCgiPHNwYW4gY2xhc3M9J3JlcGx5LWxpbmsnIHN0eWxlPSdjdXJzb3I6cG9pbnRlcjsnIHRpdGxlPSdyZXBseSc+ICZjcmFycjs8L3NwYW4+IikuY2xpY2socmVwbHkpLmluc2VydEFmdGVyKHRoaXMpOwogICAgICAgIH0pOwogICAgfQogICAgICAgICAgICAKICAgICQoIi5jb21tZW50cyIpLmVhY2gocHV0X3JlcGx5X2xpbmtzKTsKICAgIAogICAgZnVuY3Rpb24gZ29vZGlmeShzKSB7CiAgICAgICAgcmV0dXJuIHMucmVwbGFjZSgvICsvZywgIiIpOwogICAgfSAgCiAgICAKfSk7"},{"name":"Stack Exchange like I like it","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"excludes":false,"includes":false,"matches":false,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":["/^https?:\\/\\/(chat|blog|careers)\\..*/"],"orig_includes":[],"orig_matches":["*://stackexchange.com/*","*://*.stackexchange.com/*/*","*://stackoverflow.com/*/*","*://*.stackoverflow.com/*/*","*://stackapps.com/*/*","*://serverfault.com/*/*","*://superuser.com/*/*","*://askubuntu.com/*/*","*://mathoverflow.net/*/*"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"user_agent":""},"storage":{"data":{},"ts":1448203128217},"enabled":true,"position":4,"file_url":"https://github.com/calraith/gm_scripts/raw/master/se_like_I_like_it.user.js","uuid":"a490bb56-67fc-4b13-ba27-3ac98ef75e75","source":""},{"name":"Review Audit Finder","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"excludes":false,"includes":false,"matches":false,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["/^https?://\\w*.?(stackoverflow|stackexchange|serverfault|superuser|askubuntu|stackapps)\\.com/review/.*/"],"orig_matches":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"user_agent":""},"storage":{"data":{},"ts":1448203128234},"enabled":true,"position":5,"file_url":"https://raw.githubusercontent.com/Tiny-Giant/myuserscripts/master/ReviewAuditFinder.user.js","uuid":"6bb7f4cb-55a6-4da4-98d5-f8343fc7531a","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIFJldmlldyBBdWRpdCBGaW5kZXIKLy8gQG5hbWVzcGFjZSAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9UaW55LUdpYW50LwovLyBAdmVyc2lvbiAgICAgICAgMS4wLjAuNAovLyBAZGVzY3JpcHRpb24gICAgRmluZHMgcmVhbCBwb3N0IHNjb3JlcyBpbiB0aGUgcmV2aWV3IHF1ZXVlcyBhbmQgcHV0cyBpdCB1bmRlciB0aGUgYXNzdW1lZCBzY29yZSwgYWxzbyBzaWduYWxzIGlmIGl0IGlzIGFuIGF1ZGl0LgovLyBAYXV0aG9yICAgICAgICAgQFRpbnlHaWFudAovLyBAaW5jbHVkZSAgICAgICAgL15odHRwcz86Ly9cdyouPyhzdGFja292ZXJmbG93fHN0YWNrZXhjaGFuZ2V8c2VydmVyZmF1bHR8c3VwZXJ1c2VyfGFza3VidW50dXxzdGFja2FwcHMpXC5jb20vcmV2aWV3Ly4qLwovLyBAZ3JhbnQgICAgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpewogICAgdmFyIGhlYWRlcldpZHRoID0gJCgnI2hlYWRlcicpLndpZHRoKCk7CiAgICB2YXIgbG9nb1dpZHRoID0gJCgnI2hsb2dvJykud2lkdGgoKTsKICAgIHZhciBuYXZXaWR0aCA9ICQoJyNobWVudXMnKS53aWR0aCgpOwogICAgdmFyIGF2YWlsYWJsZVdpZHRoID0gaGVhZGVyV2lkdGggLSAobG9nb1dpZHRoICsgbmF2V2lkdGgpOwoKICAgIHZhciBhdWRpdEhvbGRlciA9ICQoJzxkaXYvPicpLmNzcyh7J3Bvc2l0aW9uJzonYWJzb2x1dGUnLCdsZWZ0Jzpsb2dvV2lkdGggKyAncHgnLCdmb250LXNpemUnOicyZW0nLCdmb250LXdlaWdodCc6J2JvbGQnLCdsaW5lLWhlaWdodCc6Jzc1cHgnLCd3aWR0aCc6YXZhaWxhYmxlV2lkdGggKyAncHgnLCd0ZXh0LWFsaWduJzonY2VudGVyJ30pOwogICAgJCgnI2htZW51cycpLmJlZm9yZShhdWRpdEhvbGRlcik7CgogICAgJChkb2N1bWVudCkuYWpheENvbXBsZXRlKGZ1bmN0aW9uKCkgeyAKICAgICAgICBpZigvcmV2aWV3Lm5leHRcLXRhc2t8cmV2aWV3LnRhc2tcLXJldmlld2VkLy50ZXN0KGFyZ3VtZW50c1syXS51cmwpKSB7CiAgICAgICAgICAgIHZhciBwb3N0RGF0YSA9IEpTT04ucGFyc2UoYXJndW1lbnRzWzFdLnJlc3BvbnNlVGV4dCk7CiAgICAgICAgICAgIGlmKCFwb3N0RGF0YS5wb3N0VHlwZUlkKSByZXR1cm47CiAgICAgICAgICAgIGF1ZGl0SG9sZGVyLmh0bWwocG9zdERhdGEuaXNBdWRpdCA/ICc8c3BhbiBzdHlsZT0iY29sb3I6bWFyb29uIj5UaGlzIGlzIGFuIGF1ZGl0ITwvc3Bhbj4nIDogJzxzcGFuIHN0eWxlPSJjb2xvcjpncmVlbiI+VGhpcyBpcyBub3QgYW4gYXVkaXQuPC9zcGFuPicpOwogICAgICAgICAgICAkLmFqYXgoewogICAgICAgICAgICAgICAgdHlwZTogJ0dFVCcsCiAgICAgICAgICAgICAgICB1cmw6ICcvcG9zdHMvJyArIHBvc3REYXRhLnBvc3RJZCArICcvdm90ZS1jb3VudHMnLAogICAgICAgICAgICAgICAgZGF0YVR5cGU6ICJqc29uIiwKICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChqc29uKSB7CiAgICAgICAgICAgICAgICAgICAgJCgnLnZvdGUnKS5hZnRlcignPGRpdiBjbGFzcz0idm90ZSI+PGRpdiBzdHlsZT0iY29sb3I6Z3JlZW4iPicgKyBqc29uLnVwICsgJzwvZGl2PicgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9InZvdGUtY291bnQtc2VwYXJhdG9yIj48L2Rpdj4nICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IHN0eWxlPSJjb2xvcjptYXJvb24iPicgKyBqc29uLmRvd24gKyAnPC9kaXY+PC9kaXY+Jyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgIH0pOwp9KSgpOwo="},{"name":"Highlight linked users in comments on hover","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"excludes":false,"includes":false,"matches":false,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["http://stackoverflow.com/*","http://meta.stackoverflow.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"user_agent":""},"storage":{"ts":1448364812349,"data":{}},"enabled":true,"position":6,"file_url":"https://raw.githubusercontent.com/WiredUK/SO-UserScripts/468443b1a0fa63037fb2a477d42c45f0830048cc/comment-threading.js","uuid":"c6f79fb9-d4aa-4464-afdf-2cef891ec89f","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBIaWdobGlnaHQgbGlua2VkIHVzZXJzIGluIGNvbW1lbnRzIG9uIGhvdmVyCi8vIEBuYW1lc3BhY2UgICAgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1dpcmVkVUsvU08tVXNlclNjcmlwdHMvbWFzdGVyL2NvbW1lbnQtdGhyZWFkaW5nLmpzCi8vIEB2ZXJzaW9uICAgICAgMC4xCi8vIEBkZXNjcmlwdGlvbiAgSGlnaGxpZ2h0IGxpbmtlZCB1c2VycyBpbiBjb21tZW50cyBvbiBob3ZlcgovLyBAYXV0aG9yICAgICAgIFlvdQovLyBAbWF0Y2ggICAgICAgIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL21ldGEuc3RhY2tvdmVyZmxvdy5jb20vKgovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gPT0vVXNlclNjcmlwdD09CgokKGRvY3VtZW50KS5hamF4Q29tcGxldGUoZnVuY3Rpb24oKSB7CiAgLy9CaW5kIHRvIGNvbW1lbnRzIGFmdGVyIGV2ZXJ5IGFqYXggY2FsbCBhcyBjb21tZW50cyBnZXQgcmVidWlsdCBhbGwgdGhlIHRpbWUKICAgICQoJy5jb21tZW50LWNvcHknKS51bmJpbmQoJ2hvdmVyJyk7CiAgICAkKCcuY29tbWVudC1jb3B5JykuaG92ZXIoZnVuY3Rpb24oKSB7CiAgICAgICAgLy9HZXQgdGhlIGNvbW1lbnQKICAgICAgICB2YXIgdGhpc0NvbW1lbnQgPSAkKHRoaXMpLmh0bWwoKTsKCiAgICAgICAgLy9HZXQgYWxsIG1hdGNoZXMgKGp1c3QgaW4gY2FzZSBTTyBldmVyIGRlY2lkZSB0byBhbGx3byBtb3JlIHRoYW4gb25lIHVzZXIgcGluZyBwZXIgY29tbWVudAogICAgICAgIHZhciByZSA9IC8oPzpefFxXKUAoXHcrKSg/IVx3KS9nLCBtYXRjaCwgbWF0Y2hlcyA9IFtdOwogICAgICAgIHdoaWxlIChtYXRjaCA9IHJlLmV4ZWModGhpc0NvbW1lbnQpKSB7CiAgICAgICAgICAgIG1hdGNoZXMucHVzaChtYXRjaFsxXSk7CiAgICAgICAgfQoKICAgICAgICAvL0dldCBhbGwgY29tbWVudCB1c2VycwogICAgICAgICQoJy5jb21tZW50LXVzZXInKS5lYWNoKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAvL1JlbW92ZSBtb2QgZGlhbW9uZCBhbmQgc3BhY2VzIC0gaXMgdGhpcyBlbm91Z2ggdG8gbWFrZSBhIG5hbWUgbWF0Y2g/IFByb2JhYmx5IG5vdCBidXQgZ29vZCBlbm91Z2ggZm9yIG5vdwogICAgICAgICAgICB2YXIgdXNlciA9ICQodGhpcyk7CiAgICAgICAgICAgIHZhciB1c2VyTmFtZSA9IHVzZXIudGV4dCgpLnJlcGxhY2UoJ+KZpicsICcnKS5yZXBsYWNlKC9ccy9nLCAnJyk7CiAgICAgICAgICAgIG1hdGNoZXMuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50KSB7CiAgICAgICAgICAgICAgICBjaGVja0NvbW1lbnQoZWxlbWVudCwgdXNlck5hbWUsIHVzZXIpIAogICAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgIH0sIGZ1bmN0aW9uKCkgewogICAgICAgICQoJy5jb21tZW50LXVzZXInKS5wcmV2KCkucGFyZW50KCkucmVtb3ZlQ2xhc3MoJ293bmVyJyk7CiAgICB9KTsKfSk7CiAgICAKZnVuY3Rpb24gY2hlY2tDb21tZW50KHVzZXJuYW1lLCBtYXRjaGVkVXNlcm5hbWUsIHVzZXIpIHsKICAgIGlmKG1hdGNoZWRVc2VybmFtZSA9PSB1c2VybmFtZSkgewogICAgICAgICQodXNlcikucHJldigpLnBhcmVudCgpLmFkZENsYXNzKCdvd25lcicpOwogICAgfQp9"},{"name":"Audit Detector","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"excludes":false,"includes":false,"matches":false,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*.askubuntu.com/review/*","*://*.mathoverflow.net/review/*","*://*.serverfault.com/review/*","*://*.stackapps.com/review/*","*://*.stackexchange.com/review/*","*://*.stackoverflow.com/review/*","*://*.superuser.com/review/*"],"orig_noframes":null,"orig_run_at":"document-end","use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"user_agent":""},"storage":{"ts":1448546635739,"data":{}},"enabled":true,"position":7,"file_url":"https://raw.githubusercontent.com/normalhuman/AuditDetector/master/auditdetector.user.js","uuid":"db80e75c-855e-4483-84cb-4cb47ababd0c","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIEF1ZGl0IERldGVjdG9yCi8vIEBuYW1lc3BhY2UgICBodHRwczovL2dpdGh1Yi5jb20vbm9ybWFsaHVtYW4vCi8vIEBkZXNjcmlwdGlvbiBEZXRlY3RzIGF1ZGl0cyBpbiBtb3N0IHJldmlldyBxdWV1ZXMKLy8gQG1hdGNoICAgICAgICo6Ly8qLmFza3VidW50dS5jb20vcmV2aWV3LyoKLy8gQG1hdGNoICAgICAgICo6Ly8qLm1hdGhvdmVyZmxvdy5uZXQvcmV2aWV3LyoKLy8gQG1hdGNoICAgICAgICo6Ly8qLnNlcnZlcmZhdWx0LmNvbS9yZXZpZXcvKgovLyBAbWF0Y2ggICAgICAgKjovLyouc3RhY2thcHBzLmNvbS9yZXZpZXcvKgovLyBAbWF0Y2ggICAgICAgKjovLyouc3RhY2tleGNoYW5nZS5jb20vcmV2aWV3LyoKLy8gQG1hdGNoICAgICAgICo6Ly8qLnN0YWNrb3ZlcmZsb3cuY29tL3Jldmlldy8qCi8vIEBtYXRjaCAgICAgICAqOi8vKi5zdXBlcnVzZXIuY29tL3Jldmlldy8qCi8vIEBncmFudCAgICAgICBub25lCi8vIEBydW4tYXQgICAgICBkb2N1bWVudC1lbmQKLy8gQHZlcnNpb24gICAgIDE1LjExLjEKLy8gPT0vVXNlclNjcmlwdD09Cgp2YXIgYXBpS2V5ID0gJ083c3Yzb1hpKnZPeGxYZlVTVFgqdXcoKCc7CndpbmRvdy5zZXRJbnRlcnZhbChtYWluLCA1MDApOwoKZnVuY3Rpb24gbWFpbigpIHsKICB2YXIgbGluayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZXZpZXdhYmxlLXBvc3Qtc3RhdHMgYScpOwogIGlmIChsaW5rICYmICFsaW5rLmNsYXNzTGlzdC5jb250YWlucygncHJvY2Vzc2VkJykpIHsKICAgIGxpbmsuY2xhc3NMaXN0LmFkZCgncHJvY2Vzc2VkJyk7CiAgICB2YXIgc2l0ZSA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZS5zcGxpdCgnLicpWzBdOwogICAgdmFyIGhyZWYgPSBsaW5rLmhyZWYuc3BsaXQoJyMnKTsKICAgIGlmIChocmVmLmxlbmd0aCA+IDEpIHsKICAgICAgcElkID0gaHJlZlsxXTsKICAgIH0KICAgIGVsc2UgewogICAgICBwSWQgPSBocmVmWzBdLnNwbGl0KCcvJylbNF07CiAgICB9CiAgICB2YXIgZmlsdGVyID0gJyEpOGFDSWNpb2RVWXpncjEnOwogICAgdmFyIHJlcXVlc3QgPSAnLy9hcGkuc3RhY2tleGNoYW5nZS5jb20vMi4yL3Bvc3RzLycrcElkKyc/c2l0ZT0nK3NpdGUrJyZmaWx0ZXI9JytmaWx0ZXI7CiAgICBpZiAocElkICYmIHBhcnNlSW50KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy52b3RlLWNvdW50LXBvc3QnKS50ZXh0Q29udGVudCwgMTApID09IDApIHsKICAgICAgJC5hamF4KHt1cmw6IHJlcXVlc3QsIGRhdGFUeXBlOiAnanNvbicsIG1ldGhvZDogJ0dFVCd9KS5kb25lKGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICB2YXIgYXVkaXQgPSAnJzsKICAgICAgICBpZiAoIWRhdGEuaXRlbXNbMF0pIHsKICAgICAgICAgIGF1ZGl0ID0gJ2JhZCc7CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgdmFyIHJlYWxTY29yZSA9IGRhdGEuaXRlbXNbMF0uc2NvcmU7CiAgICAgICAgICBpZiAocmVhbFNjb3JlID4gMSkgewogICAgICAgICAgICBhdWRpdCA9ICdnb29kJzsKICAgICAgICAgIH0KICAgICAgICAgIGlmIChyZWFsU2NvcmUgPCAtMSkgewogICAgICAgICAgICBhdWRpdCA9ICdiYWQnOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAoYXVkaXQpIHsKICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZXZpZXctYmFyJykuc3R5bGUuYmFja2dyb3VuZCA9IChhdWRpdCA9PSAnYmFkJyA/ICcjZmY2NjY2JyA6ICcjNjZmZjY2Jyk7CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnJldmlldy1iYXInKS5zdHlsZS5iYWNrZ3JvdW5kID0gJyNmZmZmZmYnOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfQp9Cg=="},{"name":"StackExchange obvious followed link color","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"excludes":false,"includes":false,"matches":false,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["/https?\\:\\/\\/([a-z\\.]*\\.)?stackexchange\\.com\\/.*/","/https?\\:\\/\\/([a-z\\.]*\\.)?askubuntu\\.com\\/.*/","/https?\\:\\/\\/([a-z\\.]*\\.)?superuser\\.com\\/.*/","/https?\\:\\/\\/([a-z\\.]*\\.)?serverfault\\.com\\/.*/","/https?\\:\\/\\/([a-z\\.]*\\.)?stackoverflow\\.com\\/.*/","/https?\\:\\/\\/([a-z\\.]*\\.)?answers.onstartups\\.com\\/.*/"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"user_agent":""},"storage":{"ts":1448805992770,"data":{}},"enabled":true,"position":8,"file_url":"https://greasyfork.org/scripts/3362-stackexchange-obvious-followed-link-color/code/StackExchange%20obvious%20followed%20link%20color.user.js","uuid":"6ea166e0-79ab-4e14-9f4e-fe17128833fc","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgU3RhY2tFeGNoYW5nZSBvYnZpb3VzIGZvbGxvd2VkIGxpbmsgY29sb3IKLy8gQG5hbWVzcGFjZSBodHRwOi8vb3N0ZXJtaWxsZXIub3JnLwovLyBAdmVyc2lvbiAxLjAwCi8vIEBkZXNjcmlwdGlvbiBDaGFuZ2UgdGhlIGNvbG9yIG9mIGZvbGxvd2VkIGxpbmtzIG9uIGFsbCBTdGFja0V4Y2hhbmdlIHNpdGVzIHNvIHRoZXkgdGhleSBhcmUgZWFzaWx5IGRpc3Rpbmd1aXNoYWJsZS4KLy8gQGluY2x1ZGUgL2h0dHBzP1w6XC9cLyhbYS16XC5dKlwuKT9zdGFja2V4Y2hhbmdlXC5jb21cLy4qLwovLyBAaW5jbHVkZSAvaHR0cHM/XDpcL1wvKFthLXpcLl0qXC4pP2Fza3VidW50dVwuY29tXC8uKi8KLy8gQGluY2x1ZGUgL2h0dHBzP1w6XC9cLyhbYS16XC5dKlwuKT9zdXBlcnVzZXJcLmNvbVwvLiovCi8vIEBpbmNsdWRlIC9odHRwcz9cOlwvXC8oW2EtelwuXSpcLik/c2VydmVyZmF1bHRcLmNvbVwvLiovCi8vIEBpbmNsdWRlIC9odHRwcz9cOlwvXC8oW2EtelwuXSpcLik/c3RhY2tvdmVyZmxvd1wuY29tXC8uKi8KLy8gQGluY2x1ZGUgL2h0dHBzP1w6XC9cLyhbYS16XC5dKlwuKT9hbnN3ZXJzLm9uc3RhcnR1cHNcLmNvbVwvLiovCi8vIEBncmFudCBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKZnVuY3Rpb24gYWRkQ3NzKGNzc1N0cmluZykgewogICAgdmFyIG5ld0NzcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7CiAgICBuZXdDc3MudHlwZSA9ICJ0ZXh0L2NzcyI7CiAgICBuZXdDc3MuaW5uZXJIVE1MID0gY3NzU3RyaW5nOwogICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXS5hcHBlbmRDaGlsZChuZXdDc3MpOwogICAgY29uc29sZS5sb2coImFwcGVuZGVkIGNzcyIpOwp9CgphZGRDc3MgKAogICAgJy5xdWVzdGlvbi1oeXBlcmxpbms6dmlzaXRlZCwgLnJlc3VsdC1saW5rIGE6dmlzaXRlZCB7Y29sb3I6ICMwMDAwOEIgISBpbXBvcnRhbnQ7fScKKTsg"},{"name":"Stack-Exchange-Editor-Toolkit","options":{"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"user_agent":"","override":{"includes":false,"merge_includes":true,"use_includes":[],"orig_includes":["/^https?://\\w*.?(stackoverflow|stackexchange|serverfault|superuser|askubuntu|stackapps)\\.com/(questions|posts|review)/(?!tagged|new).*/"],"matches":false,"merge_matches":true,"use_matches":[],"orig_matches":[],"excludes":false,"merge_excludes":true,"use_excludes":[],"orig_excludes":[],"orig_noframes":null,"orig_run_at":"document-idle"}},"storage":{"ts":1449981782137,"data":{}},"enabled":true,"position":9,"file_url":"https://raw.githubusercontent.com/Tiny-Giant/Stack-Exchange-Editor-Toolkit/ebba3c84824544e7a3a44218ba04538cab733c2b/editor.user.js","uuid":"2dd88c52-f3d5-4183-b29e-f2bc03f42111","source":""}]}